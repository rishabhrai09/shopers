{"version":3,"sources":["actions/action.js","componets/Groccey.jsx","componets/statas.jsx","componets/shoppingBag.jsx","componets/pocketMoney.jsx","App.js","serviceWorker.js","reducres/helper.functions.js","reducres/grocery.js","reducres/shoppingBag.reducer.js","reducres/rootReducer.js","reducres/pocketMoneyReducer.js","store.js","index.js"],"names":["addgroceryById","id","type","removeGrocery","addpocketMoneyById","removepocketMoneyById","Grocery","this","props","grocery","className","map","item","key","onClick","name","Badge","variant","cost","weight","calories","Component","connect","state","console","log","dispatch","bindActionCreators","Statas","totalCost","shoppingBag","forEach","totalWeight","totalCalories","shoppingReducer","ShoppingBag","length","dispalyShoppingBag","PocketMoney","pocketMoney","pocketmoney","App","Boolean","window","location","hostname","match","addItem","data","find","INTIAL_STATE","groceryItem","action","filter","gro","bag","rootReducer","combineReducers","additem","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7a5aa0de.chunk.js","sourcesContent":["export const ADD_GROCERY=\"ADD_GROCERY\";\r\nexport const REMOVE_GROCERY=\"REMOVE_GROCERY\";\r\nexport const ADD_POCKET_MONEY=\"ADD_POCKET_MONEY\";\r\nexport const REMOVE_POCKET_MONEY=\"REMOVE_POCKET_MONEY\";\r\n\r\nexport const addgroceryById=id=>{\r\n    const action={\r\n        type:ADD_GROCERY,\r\n        id\r\n    }\r\n    return action\r\n}\r\n\r\n\r\nexport const removeGrocery=id=>{\r\n    const action={\r\n type:REMOVE_GROCERY,\r\n id\r\n    }\r\n    return action\r\n}\r\n\r\n\r\nexport const addpocketMoneyById=(id)=>{\r\n    const action={\r\n        type:ADD_POCKET_MONEY,\r\n        id,\r\n        \r\n\r\n    }\r\n    return action\r\n}\r\n\r\n\r\nexport const removepocketMoneyById=(id)=>{\r\n    const action={\r\n type:REMOVE_POCKET_MONEY,\r\n id,\r\n \r\n    }\r\n    return action\r\n}","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport {  Badge} from 'react-bootstrap';\r\nimport {bindActionCreators} from 'redux';\r\nimport {  addgroceryById,removepocketMoneyById} from '../actions/action';\r\n\r\nclass Grocery extends Component{\r\n     render(){\r\n         \r\n         const {grocery ,addgroceryById,removepocketMoneyById}=this.props\r\n         return(\r\n <div className=\"col-md-4\">\r\n     <h2 className=\"text-center\">Grocery items </h2>\r\n     <ul className=\"list-group\">\r\n         {\r\n         grocery.map((item)=><li className=\"list-group-item\" key={item.id} onClick={()=>\r\n            {addgroceryById(item.id)\r\n            removepocketMoneyById(item.id)}\r\n         \r\n         }> <strong>{item.name}</strong>\r\n         <Badge variant=\"primary\"> &#x20B9;  {item.cost}</Badge> <Badge variant=\"secondary\"> {item.weight} mg</Badge><Badge variant=\"info\">{item.calories} kcal</Badge>\r\n         </li>\r\n  )\r\n         }\r\n  \r\n</ul>\r\n\r\n </div>\r\n         )\r\n     }\r\n}\r\n\r\nconst mapStateToprops=state=>{\r\n    console.log(state)\r\n    return{\r\n        grocery:state.grocery\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToprops=dispatch=>{\r\n   return bindActionCreators({addgroceryById,removepocketMoneyById},dispatch)\r\n}\r\nexport default connect(mapStateToprops,mapDispatchToprops)(Grocery)\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\n\r\nclass Statas extends Component{\r\n    \r\n    cost(){\r\n        let totalCost=0\r\n          this.props.shoppingBag.forEach(item => totalCost+=item.cost )\r\n            return totalCost\r\n    }\r\n\r\n    weight(){\r\n        let totalWeight=0\r\n          this.props.shoppingBag.forEach(item => totalWeight+=item.weight )\r\n            return totalWeight\r\n\r\n    }\r\n\r\n    calories(){\r\n        let totalCalories=0\r\n          this.props.shoppingBag.forEach(item => totalCalories+=item.calories )\r\n            return totalCalories\r\n\r\n    }\r\n\r\n     render(){\r\n       \r\n\r\n         return(\r\n <div className=\"col-md-4\">\r\n     <h2 className=\"text-center\">Statas items</h2>\r\n     <ul className=\"list-group\">\r\n         <li className=\"list-group-item\">Cost {this.cost()}</li>\r\n  <li className=\"list-group-item\">Calories {this.calories()}</li>\r\n         <li className=\"list-group-item\">weight {this.weight()}</li>\r\n  \r\n</ul>\r\n\r\n </div>\r\n         )\r\n     }\r\n}\r\n\r\n\r\n\r\nconst mapStateToprops=state=>{\r\n    \r\n    return{\r\n        shoppingBag:state.shoppingReducer \r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToprops,null)(Statas)\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport {  Badge} from 'react-bootstrap';\r\nimport {bindActionCreators} from 'redux';\r\nimport {  removeGrocery,addpocketMoneyById} from '../actions/action';\r\n\r\nclass ShoppingBag extends Component{\r\n    \r\n    dispalyShoppingBag(){\r\n        if(this.props.shoppingBag.length>0){\r\n            return(  <ul className=\"list-group\">\r\n            {\r\n               this.props.shoppingBag.map((item)=><li className=\"list-group-item\" key={item.id} onClick={()=>{this.props.removeGrocery(item.id)\r\n               this.props.addpocketMoneyById(item.id)\r\n               }}> <strong>{item.name}</strong>\r\n                <Badge variant=\"primary\"> &#x20B9;  {item.cost}</Badge> <Badge variant=\"secondary\"> {item.weight} mg</Badge><Badge variant=\"info\">{item.calories} kcal</Badge>\r\n                </li>\r\n         )\r\n                }\r\n       </ul>)\r\n\r\n        }\r\n        else{\r\n         return(   <ul className=\"list-group text-danger\">\r\n         <h1>No item is seleted Please select </h1>\r\n    </ul>)\r\n        }\r\n    }\r\n     render(){\r\n      \r\n       \r\n       \r\n         return(\r\n <div className=\"col-md-4\">\r\n     <h2 className=\"text-center\">Shopping Bag Items</h2>\r\n   \r\n{this.dispalyShoppingBag()}\r\n </div>\r\n         )\r\n     }\r\n}\r\n\r\n\r\nconst mapStateToprops=state=>{\r\n    \r\n    return{\r\n        shoppingBag:state.shoppingReducer \r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToprops=dispatch=>{\r\n   return bindActionCreators({removeGrocery,addpocketMoneyById},dispatch)\r\n}\r\nexport default connect(mapStateToprops,mapDispatchToprops)(ShoppingBag)\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux';\r\n\r\nclass PocketMoney extends Component{\r\n    pocketmoney(){\r\n        if(this.props.pocketMoney>=0){\r\n            return(\r\n                <h1 > You money <span className=\"text-success\"> {this.props.pocketMoney}</span> in pocket</h1>)        }\r\n\r\n        else{\r\n            \r\n           return (\r\n            <h1 className=\"text-danger\"  > You dont't have money in pocket </h1>)\r\n            \r\n        }\r\n    }\r\n\r\n\r\n\r\n    render(){\r\n        console.log(this.props.pocketMoney)\r\n        \r\n        return(\r\n            <div className=\"container\">\r\n           {this.pocketmoney()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToprops=(state )=>({\r\n    pocketMoney:state.pocketMoney\r\n})\r\nexport default connect(mapStateToprops,null)(PocketMoney)","import React from 'react';\nimport './App.css';\nimport Grocery from './componets/Groccey';\nimport Statas from './componets/statas'\nimport ShoppingBag from './componets/shoppingBag';\nimport PocketMoney from './componets/pocketMoney'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <div className=\"jumbotron bg-primary\">\n       <h1>Shopping Bag</h1>\n       <p className=\"text-danger\">Select items in Shopping Bag</p>\n      </div>\n      <PocketMoney/>\n\n      <Grocery/>\n    <ShoppingBag/> \n     <Statas/>\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import data from '../data/data.json';\r\n\r\nexport const addItem=id=>{\r\n    let item =data.find(item=>item.id===id)\r\n    return item\r\n}\r\n","import {  ADD_GROCERY,REMOVE_GROCERY} from \"../actions/action\"; \r\nimport data from '../data/data.json';\r\nimport {addItem} from './helper.functions'\r\nconst INTIAL_STATE={\r\n    groceryItem:data\r\n}\r\n\r\n export const grocery=(state=INTIAL_STATE.groceryItem,action)=>{\r\n    switch(action.type){\r\n        case ADD_GROCERY:\r\n            \r\n            let grocery=state.filter(item=> item.id!== action.id )\r\n            return grocery;\r\n\r\n            case REMOVE_GROCERY:\r\n             let gro=[...state,addItem(action.id)]\r\n                return gro;\r\n                \r\n            default:\r\n            return state;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport default grocery","import {  ADD_GROCERY,REMOVE_GROCERY} from \"../actions/action\"; \r\nimport {addItem} from './helper.functions'\r\nconst INTIAL_STATE={\r\n    bag:[]\r\n}\r\n\r\n export const shoppingReducer=(state=INTIAL_STATE.bag,action)=>{\r\n    switch(action.type){\r\n        case ADD_GROCERY:\r\n            let shoppingBag=[...state,addItem(action.id)]\r\n            return shoppingBag;\r\n            case REMOVE_GROCERY:\r\n                let bag=state.filter(item=>item.id !==action.id)\r\n                return bag;\r\n            default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default shoppingReducer","import { combineReducers } from 'redux';\r\n\r\nimport grocery from \"./grocery\";\r\nimport {shoppingReducer} from './shoppingBag.reducer';\r\nimport {pocketMoney} from './pocketMoneyReducer'\r\nconst rootReducer= combineReducers({grocery,shoppingReducer,pocketMoney});\r\nexport default rootReducer;","import {ADD_POCKET_MONEY,REMOVE_POCKET_MONEY} from '../actions/action';\r\nimport {addItem} from './helper.functions'\r\n\r\nexport const pocketMoney=(state=50,action)=>{\r\n    switch(action.type){\r\n        case ADD_POCKET_MONEY:\r\n            \r\n           let additem =addItem(action.id)\r\n\r\n           let PocketMoney=state+additem.cost\r\n           return PocketMoney\r\n            \r\n           \r\n          \r\n           case REMOVE_POCKET_MONEY:\r\n            \r\n            let    item =addItem(action.id)\r\n               let  pocketMoney=state-item.cost\r\n               return pocketMoney\r\n               default :\r\n               \r\n               return state;\r\n    }\r\n}","import {createStore} from 'redux';\r\nimport rootReducer from \"./reducres/rootReducer\";\r\nexport  const  store= createStore(rootReducer,window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from 'react-redux';\n\nimport * as serviceWorker from './serviceWorker';\nimport {store } from './store'\n\nReactDOM.render(\n  <Provider store={store}>\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}